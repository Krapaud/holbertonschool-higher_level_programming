==================================
3-say_my_name.py - Say my name
==================================

Doctest pour la fonction say_my_name

Import:
    >>> say_my_name = __import__('3-say_my_name').say_my_name

Tests avec prénom et nom:
    >>> say_my_name("John", "Smith")
    My name is John Smith

Test avec prénom seulement:
    >>> say_my_name("Bob")
    My name is Bob

Gestion des erreurs:
    >>> say_my_name(12, "White")
    Traceback (most recent call last):
    ...
    TypeError: first_name must be a string

    >>> say_my_name("John", 123)
    Traceback (most recent call last):
    ...
    TypeError: last_name must be a string

Tests avec strings vides:
    >>> say_my_name("", "")
    My name is

    >>> say_my_name("John", "")
    My name is John

    >>> say_my_name("", "Doe")
    My name is  Doe

Tests avec espaces:
    >>> say_my_name(" ", " ")
    My name is

    >>> say_my_name("Jean Pierre", "Dupont Martin")
    My name is Jean Pierre Dupont Martin

Tests d'erreur avec différents types:
    >>> say_my_name(None, "Smith")
    Traceback (most recent call last):
    ...
    TypeError: first_name must be a string

    >>> say_my_name("John", None)
    Traceback (most recent call last):
    ...
    TypeError: last_name must be a string

    >>> say_my_name([], "Smith")
    Traceback (most recent call last):
    ...
    TypeError: first_name must be a string

    >>> say_my_name("John", [])
    Traceback (most recent call last):
    ...
    TypeError: last_name must be a string

    >>> say_my_name({}, "Smith")
    Traceback (most recent call last):
    ...
    TypeError: first_name must be a string

    >>> say_my_name("John", {})
    Traceback (most recent call last):
    ...
    TypeError: last_name must be a string

Test sans argument (devrait échouer):
    >>> say_my_name()
    Traceback (most recent call last):
    ...
    TypeError: say_my_name() missing 1 required positional argument: 'first_name'

Tests avec caractères spéciaux:
    >>> say_my_name("José", "García")
    My name is José García

    >>> say_my_name("李", "小明")
    My name is 李 小明

    >>> say_my_name("John-Paul", "O'Connor")
    My name is John-Paul O'Connor

Tests avec nombres dans des strings:
    >>> say_my_name("John2", "Smith3")
    My name is John2 Smith3
